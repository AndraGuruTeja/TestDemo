# name: Local CI Pipeline

# on: [push, pull_request]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       redis:
#         image: redis:alpine
#         ports:
#           - 6379:6379

#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.9

#       - name: Install dependencies
#         run: |
#           pip install -r backend/requirements.txt
#           pip install pytest locust coverage

#       - name: Run unit tests
#         run: |
#           pytest backend/tests/ -v --cov=backend/app --cov-report=xml
#         env:
#           DATABASE_URL: sqlite:///./backend/weather.db
#           REDIS_URL: redis://localhost:6379
#           TESTING: true

#       - name: Run load tests
#         run: |
#           locust -f backend/tests/load_tests/locustfile.py \
#             --headless -u 100 -r 10 --run-time 1m \
#             --host http://localhost:8000
#         env:
#           APP_URL: http://localhost:8000

#       - name: Upload coverage
#         uses: codecov/codecov-action@v3





# name: Full CI/CD Pipeline

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       redis:
#         image: redis:alpine
#         ports:
#           - 6379:6379

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Set up Python 3.9
#       uses: actions/setup-python@v4
#       with:
#         python-version: "3.9"

#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install -r backend/requirements.txt
#         pip install pytest locust

#     - name: Run unit tests
#       run: pytest backend/tests/ -v
#       env:
#         DATABASE_URL: sqlite:///./backend/weather.db
#         REDIS_URL: redis://localhost:6379
#         TESTING: "true"

#     - name: Run load tests
#       run: |
#         locust -f backend/tests/load_tests/locustfile.py \
#           --headless -u 100 -r 10 --run-time 1m \
#           --host http://localhost:8000

#   backup:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"

#       - name: Install dependencies
#         run: |
#           pip install -r backend/requirements.txt

#       - name: Run backup
#         run: |
#           mkdir -p infrastructure/backups
#           ./infrastructure/scripts/backup_restore.sh backup

#       - name: Upload backup artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: backups
#           path: infrastructure/backups/

#   deploy:
#     needs: [test, backup]
#     runs-on: self-hosted
#     environment: local
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Docker compose deployment
#         run: |
#           docker compose down
#           docker compose build
#           docker compose up -d

#       - name: Verify deployment
#         run: |
#           docker compose ps
#           curl --retry 5 --retry-delay 10 --retry-connrefused http://localhost:8000/health








name: Full CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest locust httpx pytest-asyncio

    - name: Run unit tests
      run: pytest backend/tests/ -v
      env:
        DATABASE_URL: "sqlite:///./weather.db"  # Hardcoded for now
        REDIS_URL: "redis://localhost:6379"     # Hardcoded for now
        OPENWEATHER_API_KEY: "9d700c0c0c25726a887c42a0c667c9dd"  # Hardcoded for now
        SECRET_KEY: "7bf196ef4e3db20e13c1b9c484e9060e6ee90cf40571c4f3447627bf104b9295"  # Hardcoded for now
        ALGORITHM: "HS256"  # Hardcoded for now
        TESTING: "true"  # Hardcoded for now

    - name: Run load tests
      run: |
        # Start the backend server in the background
        python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000 &
        # Wait for the server to start
        sleep 10
        # Run load tests
        locust -f backend/tests/load_tests/locustfile.py \
          --headless -u 100 -r 10 --run-time 1m \
          --host http://localhost:8000

  backup:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt

      - name: Run backup
        run: |
          mkdir -p infrastructure/backups
          ./infrastructure/scripts/backup_restore.sh backup

      - name: Upload backup artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backups
          path: infrastructure/backups/

  deploy:
    needs: [test, backup]
    runs-on: self-hosted
    environment: local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker compose deployment
        run: |
          docker compose down
          docker compose build
          docker compose up -d

      - name: Verify deployment
        run: |
          docker compose ps
          curl --retry 5 --retry-delay 10 --retry-connrefused http://localhost:8000/health